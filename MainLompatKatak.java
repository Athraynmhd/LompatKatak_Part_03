import java.util.Scanner;

/**
 * Kelas MainLompatKatak adalah kelas utama untuk permainan Lompat Katak.
 * Permainan ini memungkinkan pemain untuk menggerakkan katak melalui
 * kotak-kotak
 * dan mengumpulkan poin dengan menemukan koin dan menghindari monster.
 */
public class MainLompatKatak {
    private boolean play;
    private Scanner s;
    private Katak katak;
    private Pemain pemain;
    private KotakPermainan kotakPermainan;
    private int tingkatKesulitan;

    /**
     * Konstruktor untuk objek MainLompatKatak.
     * Melakukan inisialisasi permainan, seperti nama pemain, tingkat kesulitan, dan
     * papan permainan.
     */
    public MainLompatKatak() {
        play = true;
        s = new Scanner(System.in);
        katak = new Katak();
        System.out.println("      *********************************************");
        System.out.println("      *  Selamat datang di permainan Lompat Katak!*");
        System.out.println("      *********************************************");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£≤‚£í‚†í‚†ç‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°≠‚†ç‚£í‚£í‚£¢‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ø‚†õ‚¢ª‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†ü‚†õ‚£ø‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£∑‚£¥‚£°‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£¶‚£é‚£º‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∫‚†ô‚¢ø‚£ø‚£ø‚£ª‚†û‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†ª‚£ø‚£ø‚£ø‚£∑‚†ü‚°∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚†ì‚†Ä‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†≥‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†Å‚†ò‚¢á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°¶‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ú‚¢≥‚°∫‚†µ‚£∂‚£í‚†¢‚†§‚†§‚†§‚†§‚†§‚†§‚£§‚£§‚°§‚†§‚°í‚°¶‚†§‚†§‚£§‚£∂‚£∂‚£æ‚£ø   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†Å‚¢∞‚†É‚¢ß‚†Ä‚†Ä‚†à‚†â‚†õ‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚£â‚°≠‚†õ‚†â‚†Å‚†Ä‚†Ä‚°á‚¢ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†è‚†Ä‚¢†‚†á‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†à‚¢ß‚†Ä‚†Ä‚¢∏‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚£†‚°¥‚†í‚†â‚†â‚†â‚¢â‚°∂‚†ö‚†Ä‚¢Ä‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†ë‚¢¶‚°à‚°ß‚¢§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚¢Ä‚°æ‚†Å‚†Ä‚†Ä‚¢Ä‚°¥‚†ä‚†Å‚†Ä‚†Ä‚¢†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ß‚†Ä‚†Ä‚†â‚†ë‚†¶‚°Ä‚†Ä");
        System.out.println("‚¢∏‚†Ä‚†Ä‚†Ä‚¢∞‚†ã‚†Ä‚†Ä‚†Ä‚†∞‚£Ñ‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚¢Ä‚°†‚†ä‚†Ä‚†Ä‚°ú‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚°Ñ");
        System.out.println("‚†ò‚°Ü‚†Ä‚†Ä‚¢∏‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°∑‚†ã‚†Ä‚†Ä‚†Ä‚¢∞‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏");
        System.out.println("‚†Ä‚†ò‚¢¶‚°Ä‚†à‚¢£‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†â‚†í‚†§‚¢≥‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ω‚°à‚†£‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚°∂‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†ü‚†¶‚£Ñ‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚†î‚†Å");
        System.out.println("‚†Ä‚†Ä‚†Ä‚£Ä‚°§‚†§‚†¥‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£á‚†Ä‚†à‚†ë‚†¢‚†§‚£Ñ‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚†§‚†î‚†ö‚¢â‚°ú‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°Ø‚†û‚°ó‚†°‚†§‚¢º‚¢Ñ‚£©‚†º‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚¢∑‚£∑‚£Ä‚£¥‚£ã‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£≤‚°§‚†§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚£Ä‚£Ä‚†Ä‚¢Ä‚£Ä‚£†‚†Æ‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°Ø‚†û‚°ó‚†°‚†§‚¢º‚¢Ñ‚£©‚†º‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Å‚†ò‚†≤‚†º‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ñ‚†Ä‚¢â‚†ç‚†±‚†ñ‚¢≤‚†ñ‚†ô‚¢Ñ‚£Ä‚°Ω‚†ü‚†í‚†í‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†è‚†Ä‚†Ä‚†õ‚†í‚†í‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†É‚†§‚¢¥‚°Ü‚¢Ä‚†Ä‚†ô‚°ß‚†¥‚†ä‚†Ä‚†Ä‚†≥‚†§‚†º‚£á‚†ê‚†≤‚°§‚†§‚†§‚†§‚†§‚¢§‚°§‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ë‚†í‚†ö‚†à‚†ì‚†í‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ì‚†ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
        System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");

        System.out.println("      *********************************************");
        System.out.println("      *            Masukkan Nama Pemain!          *");
        System.out.println("      *********************************************");
        String playerName = s.nextLine();
        pemain = new Pemain(playerName);
        pilihTingkatKesulitan();
        kotakPermainan = new KotakPermainan(300, 60, 30, tingkatKesulitan);
    }

    private void pilihTingkatKesulitan() {
        System.out.println("Pilih tingkat kesulitan:");
        System.out.println("1. Mudah");
        System.out.println("2. Sedang");
        System.out.println("3. Sulit");
        System.out.print("Masukkan pilihan tingkat kesulitan: ");
        tingkatKesulitan = s.nextInt();
    }

    public void mainkan() {
        while (play) {
            System.out.println("Posisi [ üê∏ ] di kotak : [" + katak.getPosisi() + "]");
            System.out.println("Poin [ üåü ] " + pemain.getNama() + " saat ini: " + pemain.getNilai());

            if (katak.getPosisi() == 298) {
                System.out.println("1 lompatan maju terakhir");
            }

            System.out.println("+-------------------------+");
            System.out.println("|  Tentukan langkah anda  |");
            System.out.println("+-------------------------+");
            System.out.println("== MAJU ==");
            ;

            if (katak.getPosisi() <= 297) {
                System.out.println("1. Maju 1 langkah");
                System.out.println("2. Maju 2 langkah");
            } else {
                System.out.println("Anda Hanya Memiliki satu opsi\n");
                System.out.println("1. Maju 1 langkah");
            }

            System.out.println("\n== MUNDUR ==");
            System.out.println("3. Mundur 1 langkah");
            System.out.println("4. Mundur 2 langkah");

            System.out.print("Masukkan pilihan : ");
            int pilihan = s.nextInt();

            if (pilihan == 1) {
                if (katak.getPosisi() < 299) {
                    katak.loncatDekat();
                } else {
                    System.out.println("Anda Hanya Memiliki satu opsi\n");
                    System.out.println("1. Maju 1 langkah");
                }
            } else if (pilihan == 2) {
                if (katak.getPosisi() < 298) {
                    katak.loncatJauh();
                }
            } else if (pilihan == 3) {
                if (katak.getPosisi() > 0) {
                    katak.setPosisi(katak.getPosisi() - 1);
                }
            } else if (pilihan == 4) {
                if (katak.getPosisi() > 1) {
                    katak.setPosisi(katak.getPosisi() - 2);
                }
            }

            if (katak.getPosisi() < 0) {
                katak.setPosisi(0);
            }

            int skorChange = kotakPermainan.contain(katak.getPosisi());

            if (skorChange > 0) {
                System.out.println("Anda menemukan koin [ üåü ] , poin bertambah 20");
            } else if (skorChange < 0) {
                System.out.println("Anda bertemu monster [ üê≤ ], poin berkurang 10");
            }

            pemain.setNilai(pemain.getNilai() + skorChange);

            if (pemain.getNilai() <= 0) {
                System.out.println("Game Over. Skor " + pemain.getNama() + " habis.");
                play = false;
            } else if (katak.getPosisi() >= 299) {
                System.out.println("Selamat, " + pemain.getNama() + " menang!");
                play = false;
                evaluasiPoin(pemain.getNilai());
            }
        }
    }

    /**
     * Metode untuk mengevaluasi poin pemain setelah permainan selesai.
     *
     * @param totalPoin Total poin yang telah dikumpulkan oleh pemain.
     */
    public void evaluasiPoin(int totalPoin) {
        if (totalPoin > 1000) {
            System.out.println("Poin " + pemain.getNama() + " sangat bagus!");
        } else if (totalPoin >= 500 && totalPoin <= 1000) {
            System.out.println("Poin " + pemain.getNama() + " bagus!");
        } else {
            System.out.println("Poin " + pemain.getNama() + " buruk!");
        }
    }

    /**
     * Metode utama untuk memulai permainan Lompat Katak.
     *
     * @param args Argumen baris perintah (tidak digunakan dalam permainan ini).
     */
    public static void main(String[] args) {
        MainLompatKatak game = new MainLompatKatak();
        game.mainkan();
    }
}
